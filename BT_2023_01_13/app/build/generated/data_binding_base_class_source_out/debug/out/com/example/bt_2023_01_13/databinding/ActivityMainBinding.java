// Generated by view binder compiler. Do not edit!
package com.example.bt_2023_01_13.databinding;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.viewbinding.ViewBinding;
import android.viewbinding.ViewBindings;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Spinner;
import com.example.bt_2023_01_13.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnAdd;

  @NonNull
  public final RadioButton female;

  @NonNull
  public final RadioGroup genderChoosingContainer;

  @NonNull
  public final Spinner homeTownSpinner;

  @NonNull
  public final RadioButton male;

  @NonNull
  public final EditText name;

  @NonNull
  public final EditText phoneNumber;

  @NonNull
  public final ListView userList;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button btnAdd,
      @NonNull RadioButton female, @NonNull RadioGroup genderChoosingContainer,
      @NonNull Spinner homeTownSpinner, @NonNull RadioButton male, @NonNull EditText name,
      @NonNull EditText phoneNumber, @NonNull ListView userList) {
    this.rootView = rootView;
    this.btnAdd = btnAdd;
    this.female = female;
    this.genderChoosingContainer = genderChoosingContainer;
    this.homeTownSpinner = homeTownSpinner;
    this.male = male;
    this.name = name;
    this.phoneNumber = phoneNumber;
    this.userList = userList;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_add;
      Button btnAdd = ViewBindings.findChildViewById(rootView, id);
      if (btnAdd == null) {
        break missingId;
      }

      id = R.id.female;
      RadioButton female = ViewBindings.findChildViewById(rootView, id);
      if (female == null) {
        break missingId;
      }

      id = R.id.gender_choosing_container;
      RadioGroup genderChoosingContainer = ViewBindings.findChildViewById(rootView, id);
      if (genderChoosingContainer == null) {
        break missingId;
      }

      id = R.id.home_town_spinner;
      Spinner homeTownSpinner = ViewBindings.findChildViewById(rootView, id);
      if (homeTownSpinner == null) {
        break missingId;
      }

      id = R.id.male;
      RadioButton male = ViewBindings.findChildViewById(rootView, id);
      if (male == null) {
        break missingId;
      }

      id = R.id.name;
      EditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.phone_number;
      EditText phoneNumber = ViewBindings.findChildViewById(rootView, id);
      if (phoneNumber == null) {
        break missingId;
      }

      id = R.id.user_list;
      ListView userList = ViewBindings.findChildViewById(rootView, id);
      if (userList == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, btnAdd, female,
          genderChoosingContainer, homeTownSpinner, male, name, phoneNumber, userList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
